
Welcome to GhettoNet!
======================


Introduction
------------

GhettoNet helps you see censored websites by adding their names to a file on
your computer.

This initial version of GhettoNet is a "command line app".  That means that
it must be run from a prompt, as a privileged user.  If you don't know what
that means then you need more help - I can't explain everything here, but I
hope that other people will, so please search on the internet for advaice.

To see all the options available, run ghettonet.py without any arguments.

Requires Python 2.4 or later.


File Format
-----------

GhettoNet data can be embedded in files a variety of formats.  A valid data
block is detected by:
o  splitting into lines based on (optional) carriage return and newline.
o  looking for the begin line
o  reading all data lines until the (optional) end line or bad data


More than one data block may be present in a file.  The encoding is assumed to
be whatever Python detects as the "system" encoding, unless otherwise
specified.


A valid data line is one of:
o  a comment, prefixed by #
o  a blank line
o  a date (simplified ISO 8601: yyyy-mm-dd hh:mm:ss) prefixed by ## DATE
o  a valid IPv4 line (only, currently) for a hosts file 
Any other data are taken to indicate the end of the block (if these don't
match the end line then a warning is given; if we are parsing hosts then
we refuse to continue).


The aim above is to define something that is easy for people to generate and
send, and which can be stored directly in the hosts file, but which has a 
low probability of causing errors.

The date indicates when the information was known and is used to prioritise
conflicting entries, if present (most recent date wins).


Here is a complete example of a GhettoNet file:

  ### BEGIN GHETTONET

  # wikileaks.ch from DNS
  ## DATE 2010-12-4
  213.251.145.96    www.wikileaks.org wikileaks.org

  ### END GHETTONET

Note that indentation and blank lines are optional, as are the comment and 
date.

The most important part of this program is the file format.  Please write new
clients or design new ways of spreading this data - this is very much a proof
of concept (and, I hope, a librray others can build on).


Help Output
-----------

: ./ghettonet.py -h
Usage: 

  ghettonet.py [options]

GhettoNet manages IPv4/DNS data in a format compatible with hosts files.

The format can be easily embedded in files, emails and web pages:

  ### BEGIN GHETTONET
  213.251.145.96    www.wikileaks.org wikileaks.org
  ### END GHETTONET

By default, all inputs are combined and written to stdout.  Inputs are
taken from the local hosts file, any files specified with '-i', and any
URLs specified with '-u'.

If the -w option is given then hosts is written to instead.


Examples:

  To update your hosts file from the file 'new-addresses.txt'
    ghettonet.py -w -i new-addresses.txt

  To update hosts from a URL
    ghettonet.py -w -u http://example.com/ghettonet.html

  To display ghettonet entries in your hosts file
    ghettonet.py

  To remove all ghettonet entries from your hosts file
    ghettonet.py -w -x


Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -i FILE, --input=FILE
                        read input from FILE
  -p PATH, --path=PATH  path to hosts file
  -q, --quiet           suppress messages
  -s, --stdin           read input from stdin
  -t, --test            run doctests
  -u URL, --url=URL     read input from FILE
  -w, --write           write to the hosts file
  -x, --exclude         exclude the hosts file from input


Licence
-------

This code is placed into the public domain.  You can do whatever you want with
it, but it comes with no warranty or guarantee.
